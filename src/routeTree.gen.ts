/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthVerifyEmailIndexImport } from './routes/auth/verify-email/index'
import { Route as AuthTwoFactorIndexImport } from './routes/auth/twoFactor/index'
import { Route as AuthResetPasswordIndexImport } from './routes/auth/reset-password/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthForgotPasswordIndexImport } from './routes/auth/forgot-password/index'
import { Route as AuthTwoFactorTotpIndexImport } from './routes/auth/twoFactor/totp/index'
import { Route as AuthTwoFactorSetupIndexImport } from './routes/auth/twoFactor/setup/index'
import { Route as AuthTwoFactorSecurityKeyIndexImport } from './routes/auth/twoFactor/security-key/index'
import { Route as AuthTwoFactorResetIndexImport } from './routes/auth/twoFactor/reset/index'
import { Route as AuthTwoFactorPasskeyIndexImport } from './routes/auth/twoFactor/passkey/index'
import { Route as AuthResetPasswordVerifyEmailIndexImport } from './routes/auth/reset-password/verify-email/index'
import { Route as AuthResetPasswordTwoFactorIndexImport } from './routes/auth/reset-password/twoFactor/index'
import { Route as AuthTwoFactorTotpSetupIndexImport } from './routes/auth/twoFactor/totp/setup/index'
import { Route as AuthTwoFactorSecurityKeyRegisterIndexImport } from './routes/auth/twoFactor/security-key/register/index'
import { Route as AuthTwoFactorPasskeyRegisterIndexImport } from './routes/auth/twoFactor/passkey/register/index'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailIndexRoute = AuthVerifyEmailIndexImport.update({
  id: '/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTwoFactorIndexRoute = AuthTwoFactorIndexImport.update({
  id: '/twoFactor/',
  path: '/twoFactor/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetPasswordIndexRoute = AuthResetPasswordIndexImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTwoFactorTotpIndexRoute = AuthTwoFactorTotpIndexImport.update({
  id: '/twoFactor/totp/',
  path: '/twoFactor/totp/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTwoFactorSetupIndexRoute = AuthTwoFactorSetupIndexImport.update({
  id: '/twoFactor/setup/',
  path: '/twoFactor/setup/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTwoFactorSecurityKeyIndexRoute =
  AuthTwoFactorSecurityKeyIndexImport.update({
    id: '/twoFactor/security-key/',
    path: '/twoFactor/security-key/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthTwoFactorResetIndexRoute = AuthTwoFactorResetIndexImport.update({
  id: '/twoFactor/reset/',
  path: '/twoFactor/reset/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTwoFactorPasskeyIndexRoute = AuthTwoFactorPasskeyIndexImport.update({
  id: '/twoFactor/passkey/',
  path: '/twoFactor/passkey/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetPasswordVerifyEmailIndexRoute =
  AuthResetPasswordVerifyEmailIndexImport.update({
    id: '/reset-password/verify-email/',
    path: '/reset-password/verify-email/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthResetPasswordTwoFactorIndexRoute =
  AuthResetPasswordTwoFactorIndexImport.update({
    id: '/reset-password/twoFactor/',
    path: '/reset-password/twoFactor/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthTwoFactorTotpSetupIndexRoute =
  AuthTwoFactorTotpSetupIndexImport.update({
    id: '/twoFactor/totp/setup/',
    path: '/twoFactor/totp/setup/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthTwoFactorSecurityKeyRegisterIndexRoute =
  AuthTwoFactorSecurityKeyRegisterIndexImport.update({
    id: '/twoFactor/security-key/register/',
    path: '/twoFactor/security-key/register/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthTwoFactorPasskeyRegisterIndexRoute =
  AuthTwoFactorPasskeyRegisterIndexImport.update({
    id: '/twoFactor/passkey/register/',
    path: '/twoFactor/passkey/register/',
    getParentRoute: () => AuthRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password/': {
      id: '/auth/reset-password/'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/': {
      id: '/auth/twoFactor/'
      path: '/twoFactor'
      fullPath: '/auth/twoFactor'
      preLoaderRoute: typeof AuthTwoFactorIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/verify-email/': {
      id: '/auth/verify-email/'
      path: '/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password/twoFactor/': {
      id: '/auth/reset-password/twoFactor/'
      path: '/reset-password/twoFactor'
      fullPath: '/auth/reset-password/twoFactor'
      preLoaderRoute: typeof AuthResetPasswordTwoFactorIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password/verify-email/': {
      id: '/auth/reset-password/verify-email/'
      path: '/reset-password/verify-email'
      fullPath: '/auth/reset-password/verify-email'
      preLoaderRoute: typeof AuthResetPasswordVerifyEmailIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/passkey/': {
      id: '/auth/twoFactor/passkey/'
      path: '/twoFactor/passkey'
      fullPath: '/auth/twoFactor/passkey'
      preLoaderRoute: typeof AuthTwoFactorPasskeyIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/reset/': {
      id: '/auth/twoFactor/reset/'
      path: '/twoFactor/reset'
      fullPath: '/auth/twoFactor/reset'
      preLoaderRoute: typeof AuthTwoFactorResetIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/security-key/': {
      id: '/auth/twoFactor/security-key/'
      path: '/twoFactor/security-key'
      fullPath: '/auth/twoFactor/security-key'
      preLoaderRoute: typeof AuthTwoFactorSecurityKeyIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/setup/': {
      id: '/auth/twoFactor/setup/'
      path: '/twoFactor/setup'
      fullPath: '/auth/twoFactor/setup'
      preLoaderRoute: typeof AuthTwoFactorSetupIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/totp/': {
      id: '/auth/twoFactor/totp/'
      path: '/twoFactor/totp'
      fullPath: '/auth/twoFactor/totp'
      preLoaderRoute: typeof AuthTwoFactorTotpIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/passkey/register/': {
      id: '/auth/twoFactor/passkey/register/'
      path: '/twoFactor/passkey/register'
      fullPath: '/auth/twoFactor/passkey/register'
      preLoaderRoute: typeof AuthTwoFactorPasskeyRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/security-key/register/': {
      id: '/auth/twoFactor/security-key/register/'
      path: '/twoFactor/security-key/register'
      fullPath: '/auth/twoFactor/security-key/register'
      preLoaderRoute: typeof AuthTwoFactorSecurityKeyRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/twoFactor/totp/setup/': {
      id: '/auth/twoFactor/totp/setup/'
      path: '/twoFactor/totp/setup'
      fullPath: '/auth/twoFactor/totp/setup'
      preLoaderRoute: typeof AuthTwoFactorTotpSetupIndexImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
  AuthTwoFactorIndexRoute: typeof AuthTwoFactorIndexRoute
  AuthVerifyEmailIndexRoute: typeof AuthVerifyEmailIndexRoute
  AuthResetPasswordTwoFactorIndexRoute: typeof AuthResetPasswordTwoFactorIndexRoute
  AuthResetPasswordVerifyEmailIndexRoute: typeof AuthResetPasswordVerifyEmailIndexRoute
  AuthTwoFactorPasskeyIndexRoute: typeof AuthTwoFactorPasskeyIndexRoute
  AuthTwoFactorResetIndexRoute: typeof AuthTwoFactorResetIndexRoute
  AuthTwoFactorSecurityKeyIndexRoute: typeof AuthTwoFactorSecurityKeyIndexRoute
  AuthTwoFactorSetupIndexRoute: typeof AuthTwoFactorSetupIndexRoute
  AuthTwoFactorTotpIndexRoute: typeof AuthTwoFactorTotpIndexRoute
  AuthTwoFactorPasskeyRegisterIndexRoute: typeof AuthTwoFactorPasskeyRegisterIndexRoute
  AuthTwoFactorSecurityKeyRegisterIndexRoute: typeof AuthTwoFactorSecurityKeyRegisterIndexRoute
  AuthTwoFactorTotpSetupIndexRoute: typeof AuthTwoFactorTotpSetupIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
  AuthTwoFactorIndexRoute: AuthTwoFactorIndexRoute,
  AuthVerifyEmailIndexRoute: AuthVerifyEmailIndexRoute,
  AuthResetPasswordTwoFactorIndexRoute: AuthResetPasswordTwoFactorIndexRoute,
  AuthResetPasswordVerifyEmailIndexRoute:
    AuthResetPasswordVerifyEmailIndexRoute,
  AuthTwoFactorPasskeyIndexRoute: AuthTwoFactorPasskeyIndexRoute,
  AuthTwoFactorResetIndexRoute: AuthTwoFactorResetIndexRoute,
  AuthTwoFactorSecurityKeyIndexRoute: AuthTwoFactorSecurityKeyIndexRoute,
  AuthTwoFactorSetupIndexRoute: AuthTwoFactorSetupIndexRoute,
  AuthTwoFactorTotpIndexRoute: AuthTwoFactorTotpIndexRoute,
  AuthTwoFactorPasskeyRegisterIndexRoute:
    AuthTwoFactorPasskeyRegisterIndexRoute,
  AuthTwoFactorSecurityKeyRegisterIndexRoute:
    AuthTwoFactorSecurityKeyRegisterIndexRoute,
  AuthTwoFactorTotpSetupIndexRoute: AuthTwoFactorTotpSetupIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/twoFactor': typeof AuthTwoFactorIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
  '/auth/reset-password/twoFactor': typeof AuthResetPasswordTwoFactorIndexRoute
  '/auth/reset-password/verify-email': typeof AuthResetPasswordVerifyEmailIndexRoute
  '/auth/twoFactor/passkey': typeof AuthTwoFactorPasskeyIndexRoute
  '/auth/twoFactor/reset': typeof AuthTwoFactorResetIndexRoute
  '/auth/twoFactor/security-key': typeof AuthTwoFactorSecurityKeyIndexRoute
  '/auth/twoFactor/setup': typeof AuthTwoFactorSetupIndexRoute
  '/auth/twoFactor/totp': typeof AuthTwoFactorTotpIndexRoute
  '/auth/twoFactor/passkey/register': typeof AuthTwoFactorPasskeyRegisterIndexRoute
  '/auth/twoFactor/security-key/register': typeof AuthTwoFactorSecurityKeyRegisterIndexRoute
  '/auth/twoFactor/totp/setup': typeof AuthTwoFactorTotpSetupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/twoFactor': typeof AuthTwoFactorIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
  '/auth/reset-password/twoFactor': typeof AuthResetPasswordTwoFactorIndexRoute
  '/auth/reset-password/verify-email': typeof AuthResetPasswordVerifyEmailIndexRoute
  '/auth/twoFactor/passkey': typeof AuthTwoFactorPasskeyIndexRoute
  '/auth/twoFactor/reset': typeof AuthTwoFactorResetIndexRoute
  '/auth/twoFactor/security-key': typeof AuthTwoFactorSecurityKeyIndexRoute
  '/auth/twoFactor/setup': typeof AuthTwoFactorSetupIndexRoute
  '/auth/twoFactor/totp': typeof AuthTwoFactorTotpIndexRoute
  '/auth/twoFactor/passkey/register': typeof AuthTwoFactorPasskeyRegisterIndexRoute
  '/auth/twoFactor/security-key/register': typeof AuthTwoFactorSecurityKeyRegisterIndexRoute
  '/auth/twoFactor/totp/setup': typeof AuthTwoFactorTotpSetupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/auth/reset-password/': typeof AuthResetPasswordIndexRoute
  '/auth/twoFactor/': typeof AuthTwoFactorIndexRoute
  '/auth/verify-email/': typeof AuthVerifyEmailIndexRoute
  '/auth/reset-password/twoFactor/': typeof AuthResetPasswordTwoFactorIndexRoute
  '/auth/reset-password/verify-email/': typeof AuthResetPasswordVerifyEmailIndexRoute
  '/auth/twoFactor/passkey/': typeof AuthTwoFactorPasskeyIndexRoute
  '/auth/twoFactor/reset/': typeof AuthTwoFactorResetIndexRoute
  '/auth/twoFactor/security-key/': typeof AuthTwoFactorSecurityKeyIndexRoute
  '/auth/twoFactor/setup/': typeof AuthTwoFactorSetupIndexRoute
  '/auth/twoFactor/totp/': typeof AuthTwoFactorTotpIndexRoute
  '/auth/twoFactor/passkey/register/': typeof AuthTwoFactorPasskeyRegisterIndexRoute
  '/auth/twoFactor/security-key/register/': typeof AuthTwoFactorSecurityKeyRegisterIndexRoute
  '/auth/twoFactor/totp/setup/': typeof AuthTwoFactorTotpSetupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/twoFactor'
    | '/auth/verify-email'
    | '/auth/reset-password/twoFactor'
    | '/auth/reset-password/verify-email'
    | '/auth/twoFactor/passkey'
    | '/auth/twoFactor/reset'
    | '/auth/twoFactor/security-key'
    | '/auth/twoFactor/setup'
    | '/auth/twoFactor/totp'
    | '/auth/twoFactor/passkey/register'
    | '/auth/twoFactor/security-key/register'
    | '/auth/twoFactor/totp/setup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/twoFactor'
    | '/auth/verify-email'
    | '/auth/reset-password/twoFactor'
    | '/auth/reset-password/verify-email'
    | '/auth/twoFactor/passkey'
    | '/auth/twoFactor/reset'
    | '/auth/twoFactor/security-key'
    | '/auth/twoFactor/setup'
    | '/auth/twoFactor/totp'
    | '/auth/twoFactor/passkey/register'
    | '/auth/twoFactor/security-key/register'
    | '/auth/twoFactor/totp/setup'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/forgot-password/'
    | '/auth/login/'
    | '/auth/register/'
    | '/auth/reset-password/'
    | '/auth/twoFactor/'
    | '/auth/verify-email/'
    | '/auth/reset-password/twoFactor/'
    | '/auth/reset-password/verify-email/'
    | '/auth/twoFactor/passkey/'
    | '/auth/twoFactor/reset/'
    | '/auth/twoFactor/security-key/'
    | '/auth/twoFactor/setup/'
    | '/auth/twoFactor/totp/'
    | '/auth/twoFactor/passkey/register/'
    | '/auth/twoFactor/security-key/register/'
    | '/auth/twoFactor/totp/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/forgot-password/",
        "/auth/login/",
        "/auth/register/",
        "/auth/reset-password/",
        "/auth/twoFactor/",
        "/auth/verify-email/",
        "/auth/reset-password/twoFactor/",
        "/auth/reset-password/verify-email/",
        "/auth/twoFactor/passkey/",
        "/auth/twoFactor/reset/",
        "/auth/twoFactor/security-key/",
        "/auth/twoFactor/setup/",
        "/auth/twoFactor/totp/",
        "/auth/twoFactor/passkey/register/",
        "/auth/twoFactor/security-key/register/",
        "/auth/twoFactor/totp/setup/"
      ]
    },
    "/auth/forgot-password/": {
      "filePath": "auth/forgot-password/index.tsx",
      "parent": "/auth"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx",
      "parent": "/auth"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password/": {
      "filePath": "auth/reset-password/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/": {
      "filePath": "auth/twoFactor/index.tsx",
      "parent": "/auth"
    },
    "/auth/verify-email/": {
      "filePath": "auth/verify-email/index.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password/twoFactor/": {
      "filePath": "auth/reset-password/twoFactor/index.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password/verify-email/": {
      "filePath": "auth/reset-password/verify-email/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/passkey/": {
      "filePath": "auth/twoFactor/passkey/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/reset/": {
      "filePath": "auth/twoFactor/reset/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/security-key/": {
      "filePath": "auth/twoFactor/security-key/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/setup/": {
      "filePath": "auth/twoFactor/setup/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/totp/": {
      "filePath": "auth/twoFactor/totp/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/passkey/register/": {
      "filePath": "auth/twoFactor/passkey/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/security-key/register/": {
      "filePath": "auth/twoFactor/security-key/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/twoFactor/totp/setup/": {
      "filePath": "auth/twoFactor/totp/setup/index.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
